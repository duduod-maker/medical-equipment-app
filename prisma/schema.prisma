// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  role      Role     @default(USER)
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  equipments Equipment[]
  requests   Request[]

  @@map("users")
}

model EquipmentType {
  id   String @id @default(cuid())
  name String @unique

  equipments Equipment[]

  @@map("equipment_types")
}

model Equipment {
  id        String   @id @default(cuid())
  reference String?
  sector    String
  room      String
  resident    String
  deliveryDate DateTime?
  returnDate   DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  typeId String
  type   EquipmentType @relation(fields: [typeId], references: [id])

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  requestItems RequestItem[]

  @@map("equipments")
}

model Request {
  id        String        @id @default(cuid())
  status    RequestStatus @default(PENDING)
  notes     String?
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  items RequestItem[]

  @@map("requests")
}

model RequestItem {
  id          String      @id @default(cuid())
  type        RequestType
  description String?

  requestId String
  request   Request @relation(fields: [requestId], references: [id], onDelete: Cascade)

  equipmentId String?
  equipment   Equipment? @relation(fields: [equipmentId], references: [id])

  @@map("request_items")
}

enum Role {
  USER
  ADMIN
}

enum RequestStatus {
  PENDING
  ACKNOWLEDGED
  IN_PREPARATION
  COMPLETED
}

enum RequestType {
  DELIVERY
  PICKUP
  REPAIR
}
